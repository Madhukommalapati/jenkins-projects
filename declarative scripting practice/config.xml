<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4106.v7a_8a_8176d450">
    <script>pipeline {
    agent any

    tools {
        jdk &apos;Java 17&apos;
    }

    environment {
        ENV = &apos;hello welcome&apos;
    }

    stages {
        stage(&apos;Practice&apos;) {
            steps {
                echo &apos;Practicing the declarative scripting&apos;
            }
        }

        stage(&apos;Parallel Tests&apos;) {
            parallel {
                stage(&apos;T1&apos;) {
                    steps {
                        echo &apos;running test1&apos;
                    }
                }
                stage(&apos;T2&apos;) {
                    steps {
                        echo &apos;running test2&apos;
                    }
                }
            }
        }

        stage(&apos;Environment Echo&apos;) {
            steps {
                echo &quot;${ENV} to Jenkins&quot;
            }
        }

        stage(&apos;Manual Approval&apos;) {
            steps {
                input message: &apos;Is it successful?&apos;, ok: &apos;Yes&apos;
            }
        }
    }

    post {
        success {
            echo &apos;Pipeline success&apos;
        }
        failure {
            echo &apos;Something is wrong&apos;
        }
        always {
            echo &apos;Make sure it works properly&apos;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>